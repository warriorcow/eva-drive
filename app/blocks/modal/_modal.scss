.modal {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 30;
  display: none;
  // display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  &__container {
    width: 90%;
    max-height: 90%;
    background-color: $white;
    border-radius: 10px;
    padding: 20px;
    box-sizing: border-box;
    position: relative;
    z-index: 4;
    overflow: auto;
    flex-wrap: wrap;
    display: none;
    @include breakpoint(lg) {
      padding: 40px;
    }
    &#city {
      max-width: 600px;
      .cities {
        padding-left: 0;
        list-style: none;
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
        margin: 0;
        overflow: hidden;
        @include breakpoint(lg) {
          margin: 0 100px 0 0;
        }
        li {
          max-width: 100%;
          width: 100%;
          @include breakpoint(lg) {
            max-width: 180px;
          }
          &:not(:last-of-type) {
            margin-bottom: 20px;
          }
          a {
            color: $main;
            display: block;
            &:hover {
              color: $red;
              text-decoration: underline;
            }
          }
        }
      }
    }
  }
  &__title {
    font-size: 32px;
    color: $red;
    font-weight: 700;
    font-family: 'HeliosCond', sans-serif;
    margin-bottom: 30px;
    @include breakpoint(lg) {
      font-size: 40px;
      margin-bottom: 40px;
    }
    span {
      color: $main;
    }
  }
}

.overlay {
  position: absolute;
  background-color: #000000;
  width: 100%;
  opacity: 0.5;
  height: 100%;
  z-index: 2;
  cursor: pointer;
}

.close {
  position: absolute;
  cursor: pointer;
  top: 30px;
  right: 20px;
  width: 20px;
  height: 20px;
  z-index: 5;
  @include breakpoint(lg) {
    top: 20px;
  }
  &:before,
  &:after {
    content: '';
    position: absolute;
    height: 100%;
    width: 2px;
    background-color: #A7A7A7;
    left: 50%;
    transform: translateX(-50%) rotate(45deg);
  }
  &:after {
    transform: translateX(-50%) rotate(-45deg);
  }
}